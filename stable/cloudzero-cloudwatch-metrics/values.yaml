image:
  repository: ghcr.io/cloudzero/cloudzero-agent
  tag: 0.0.22
  pullPolicy: IfNotPresent

clusterName: cluster_name

resources:
  limits:
    cpu: 100m
    memory: 300Mi
  requests:
    cpu: 50m
    memory: 50Mi

trackReplicaSets: "true"

serviceAccount:
  create: true
  name:

  # For AWS ROSA (OpenShift)
  # add the annotations eks.amazonaws.com/role-arn:
  # this role allows the Pod to write to CloudWatch Logs to write metrics
  # annotations:
  #  eks.amazonaws.com/role-arn: arn:aws:iam::<account>:role/<rolename>

hostNetwork: true

nodeSelector: {}

tolerations:
# Allow CloudZero agent to run on all nodes in case of a taint
  - effect: NoSchedule
    operator: Exists

affinity: {}

# For bottlerocket OS (https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContainerInsights-troubleshooting.html#ContainerInsights-troubleshooting-bottlerocket)
# containerdSockPath: /run/dockershim.sock
#
# For OpenShift
# For AWS ROSA (OpenShift)
# containerdSockPath: /var/run/crio/crio.sock
containerdSockPath:

annotations: {}

priorityClassName:

agentConfig: {}

imagePullSecrets: []

# Additional labels to add to the pods:
# podLabels:
#   key: value
podLabels: {}

# Additional labels to add to the DaemonSet:
# daemonsetLabels:
#   key: value
daemonsetLabels: {}

# For AWS ROSA (OpenShift)
#openshift: true

metricsCollectionInterval: 120
